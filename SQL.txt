-- 凤梨溯源系统 - 完整SQL设置脚本
-- 在Supabase SQL编辑器中一次性执行此脚本

-- 1. 启用必要的扩展
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";

-- 2. 创建页面内容表
CREATE TABLE IF NOT EXISTS page_content (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    key VARCHAR(100) UNIQUE NOT NULL,
    content TEXT NOT NULL,
    section VARCHAR(50) NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 3. 创建凤梨产品信息表
CREATE TABLE IF NOT EXISTS pineapple_products (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    variety VARCHAR(100) NOT NULL,
    characteristics TEXT,
    weight_range VARCHAR(50),
    storage_info TEXT,
    nutritional_value TEXT,
    usage_suggestions TEXT,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 4. 创建果园信息表
CREATE TABLE IF NOT EXISTS orchard_info (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    description TEXT NOT NULL,
    location VARCHAR(200),
    features TEXT,
    farmer_message TEXT,
    contact_info JSONB,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 5. 创建生长阶段表
CREATE TABLE IF NOT EXISTS growth_stages (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    stage_name VARCHAR(100) NOT NULL,
    duration VARCHAR(50),
    description TEXT,
    image_url VARCHAR(500),
    stage_order INTEGER NOT NULL,
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- 6. 创建团队信息表
CREATE TABLE IF NOT EXISTS team_info (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    team_name VARCHAR(200) NOT NULL,
    description TEXT,
    members JSONB,
    contact_info JSONB,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- 7. 创建索引
CREATE INDEX IF NOT EXISTS idx_page_content_key ON page_content(key);
CREATE INDEX IF NOT EXISTS idx_page_content_section ON page_content(section);
CREATE INDEX IF NOT EXISTS idx_growth_stages_order ON growth_stages(stage_order);

-- 8. 启用行级安全策略 (RLS)
ALTER TABLE page_content ENABLE ROW LEVEL SECURITY;
ALTER TABLE pineapple_products ENABLE ROW LEVEL SECURITY;
ALTER TABLE orchard_info ENABLE ROW LEVEL SECURITY;
ALTER TABLE growth_stages ENABLE ROW LEVEL SECURITY;
ALTER TABLE team_info ENABLE ROW LEVEL SECURITY;

-- 9. 创建RLS策略（简化版本）- 修复重复策略名称
-- 页面内容表策略
DROP POLICY IF EXISTS "page_content_select_policy" ON page_content;
CREATE POLICY "page_content_select_policy_v2" ON page_content FOR SELECT USING (true);
DROP POLICY IF EXISTS "page_content_modify_policy" ON page_content;
CREATE POLICY "page_content_modify_policy_v2" ON page_content FOR ALL USING (auth.role() = 'authenticated');

-- 产品表策略
DROP POLICY IF EXISTS "pineapple_products_select_policy" ON pineapple_products;
CREATE POLICY "pineapple_products_select_policy_v2" ON pineapple_products FOR SELECT USING (true);
DROP POLICY IF EXISTS "pineapple_products_modify_policy" ON pineapple_products;
CREATE POLICY "pineapple_products_modify_policy_v2" ON pineapple_products FOR ALL USING (auth.role() = 'authenticated');

-- 果园表策略
DROP POLICY IF EXISTS "orchard_info_select_policy" ON orchard_info;
CREATE POLICY "orchard_info_select_policy_v2" ON orchard_info FOR SELECT USING (true);
DROP POLICY IF EXISTS "orchard_info_modify_policy" ON orchard_info;
CREATE POLICY "orchard_info_modify_policy_v2" ON orchard_info FOR ALL USING (auth.role() = 'authenticated');

-- 生长阶段表策略
DROP POLICY IF EXISTS "growth_stages_select_policy" ON growth_stages;
CREATE POLICY "growth_stages_select_policy_v2" ON growth_stages FOR SELECT USING (true);
DROP POLICY IF EXISTS "growth_stages_modify_policy" ON growth_stages;
CREATE POLICY "growth_stages_modify_policy_v2" ON growth_stages FOR ALL USING (auth.role() = 'authenticated');

-- 团队表策略
DROP POLICY IF EXISTS "team_info_select_policy" ON team_info;
CREATE POLICY "team_info_select_policy_v2" ON team_info FOR SELECT USING (true);
DROP POLICY IF EXISTS "team_info_modify_policy" ON team_info;
CREATE POLICY "team_info_modify_policy_v2" ON team_info FOR ALL USING (auth.role() = 'authenticated');

-- 10. 插入初始示例数据
INSERT INTO page_content (key, content, section) VALUES
('hero_title', '科技赋能农业 · 溯源保障品质', 'hero'),
('hero_subtitle', '广工揭阳校区团队助力凤梨产业发展', 'hero'),
('orchard_title', '优质凤梨种植基地', 'orchard'),
('orchard_description', '我们的凤梨种植基地位于揭阳市优质农业区，拥有得天独厚的自然条件：充足的阳光照射、纯净的水源灌溉、肥沃的土壤环境、有机种植方式。', 'orchard'),
('farmer_message', '我们用心种植每一颗凤梨，就像照顾自己的孩子一样。希望您能品尝到最甜美的果实！', 'orchard'),
('growth_title', '凤梨生长过程', 'growth'),
('growth_description', '从种植到采收的完整生长周期，确保每一颗凤梨都达到最佳品质。', 'growth'),
('product_title', '产品信息', 'product'),
('product_description', '金钻凤梨：果肉细腻，甜度高，香气浓郁，重量1.5-2.0kg/个', 'product'),
('team_title', '团队介绍', 'team'),
('team_description', '我们是一支由电子商务专业学生组成的团队，致力于用科技赋能传统农业，为凤梨产业插上"科技的翅膀"。', 'team')
ON CONFLICT (key) DO UPDATE SET content = EXCLUDED.content;

INSERT INTO pineapple_products (variety, characteristics, weight_range, storage_info, nutritional_value, usage_suggestions) VALUES
('金钻凤梨', '果肉细腻，甜度高，香气浓郁', '1.5-2.0kg/个', '常温保存7-10天', '富含维生素C、天然果糖、膳食纤维、水分充足', '鲜食最佳、可制作果汁、烘焙配料、沙拉搭配')
ON CONFLICT (id) DO NOTHING;

INSERT INTO orchard_info (description, location, features, farmer_message, contact_info) VALUES
('优质凤梨种植基地位于揭阳市优质农业区', '广东省揭阳市', '充足的阳光照射、纯净的水源灌溉、肥沃的土壤环境、有机种植方式', '我们用心种植每一颗凤梨，就像照顾自己的孩子一样。希望您能品尝到最甜美的果实！', '{"phone": "13800138000", "email": "orchard@example.com", "address": "广东省揭阳市优质农业区"}')
ON CONFLICT (id) DO NOTHING;

INSERT INTO growth_stages (stage_name, duration, description, stage_order) VALUES
('种植期', '第1个月', '精心挑选优质种苗，科学种植', 1),
('生长期', '第3个月', '定期施肥浇水，确保健康生长', 2),
('成熟期', '第6个月', '果实逐渐成熟，糖分积累', 3),
('采收期', '第8个月', '人工精心挑选，确保品质', 4)
ON CONFLICT (id) DO NOTHING;

INSERT INTO team_info (team_name, description, members, contact_info) VALUES
('广东工业大学揭阳校区团队', '我们是一支由电子商务专业学生组成的团队，致力于用科技赋能传统农业', '[{"name": "项目目标", "description": "通过溯源系统提升农产品价值，让消费者吃得放心"}, {"name": "技术特色", "description": "结合H5页面与Supabase后端，实现数据实时更新"}, {"name": "未来规划", "description": "扩展更多农产品溯源，助力乡村振兴"}]', '{"email": "team@gdut.edu.cn", "phone": "0755-12345678", "address": "广东工业大学揭阳校区"}')
ON CONFLICT (id) DO NOTHING;

-- 11. 验证表创建和数据插入
SELECT '页面内容表记录数: ' || COUNT(*) FROM page_content;
SELECT '产品信息表记录数: ' || COUNT(*) FROM pineapple_products;
SELECT '果园信息表记录数: ' || COUNT(*) FROM orchard_info;
SELECT '生长阶段表记录数: ' || COUNT(*) FROM growth_stages;
SELECT '团队信息表记录数: ' || COUNT(*) FROM team_info;

-- 12. 创建用于前端查询的视图
CREATE OR REPLACE VIEW page_content_view AS
SELECT key, content, section, updated_at
FROM page_content
ORDER BY section, key;

-- 完成提示
SELECT '凤梨溯源系统数据库设置完成！' as message;


-- 存储桶策略配置 - 修复重复策略名称
-- 创建存储桶（如果不存在）
INSERT INTO storage.buckets (id, name, public, file_size_limit, allowed_mime_types)
VALUES ('images', 'images', true, 5242880, ARRAY['image/*'])
ON CONFLICT (id) DO UPDATE SET
    public = EXCLUDED.public,
    file_size_limit = EXCLUDED.file_size_limit,
    allowed_mime_types = EXCLUDED.allowed_mime_types;

-- 创建存储桶读取策略
DROP POLICY IF EXISTS "storage_images_select_policy" ON storage.objects;
CREATE POLICY "storage_images_select_policy_v2" ON storage.objects
FOR SELECT USING (bucket_id = 'images');

-- 创建存储桶上传策略
DROP POLICY IF EXISTS "storage_images_insert_policy" ON storage.objects;
CREATE POLICY "storage_images_insert_policy_v2" ON storage.objects
FOR INSERT WITH CHECK (
    bucket_id = 'images' 
    AND auth.role() = 'authenticated'
);

-- 创建存储桶更新策略
DROP POLICY IF EXISTS "storage_images_update_policy" ON storage.objects;
CREATE POLICY "storage_images_update_policy_v2" ON storage.objects
FOR UPDATE USING (
    bucket_id = 'images' 
    AND auth.role() = 'authenticated'
);

-- 创建存储桶删除策略
DROP POLICY IF EXISTS "storage_images_delete_policy" ON storage.objects;
CREATE POLICY "storage_images_delete_policy_v2" ON storage.objects
FOR DELETE USING (
    bucket_id = 'images' 
    AND auth.role() = 'authenticated'
);


-- 在SQL.txt中添加图片表
CREATE TABLE IF NOT EXISTS gallery_images (
    id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
    title VARCHAR(200) NOT NULL,
    description TEXT,
    file_name VARCHAR(255) NOT NULL,
    file_path VARCHAR(500) NOT NULL,
    url VARCHAR(500) NOT NULL,
    file_size BIGINT,
    mime_type VARCHAR(100),
    upload_date TIMESTAMPTZ DEFAULT NOW(),
    created_at TIMESTAMPTZ DEFAULT NOW()
);

-- 启用RLS
ALTER TABLE gallery_images ENABLE ROW LEVEL SECURITY;

-- 创建策略
DROP POLICY IF EXISTS "gallery_images_select_policy" ON gallery_images;
CREATE POLICY "gallery_images_select_policy_v2" ON gallery_images FOR SELECT USING (true);
DROP POLICY IF EXISTS "gallery_images_modify_policy" ON gallery_images;
CREATE POLICY "gallery_images_modify_policy_v2" ON gallery_images FOR ALL USING (auth.role() = 'authenticated');